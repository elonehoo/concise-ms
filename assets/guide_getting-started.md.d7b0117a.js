import{_ as s,c as e,o as n,a}from"./app.71d440a6.js";const D=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[{"level":2,"title":"install","slug":"install","link":"#install","children":[]},{"level":2,"title":"usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"api","slug":"api","link":"#api","children":[{"level":3,"title":"prettyMilliseconds(milliseconds, options?)","slug":"prettymilliseconds-milliseconds-options","link":"#prettymilliseconds-milliseconds-options","children":[]}]}],"relativePath":"guide/getting-started.md","lastUpdated":1673414542000}'),o={name:"guide/getting-started.md"},l=a(`<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-hidden="true">#</a></h1><h2 id="install" tabindex="-1">install <a class="header-anchor" href="#install" aria-hidden="true">#</a></h2><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#676E95;"># npm</span></span>
<span class="line"><span style="color:#A6ACCD;">npm install @elonehoo/concise-ms</span></span>
<span class="line"><span style="color:#676E95;"># yarn</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn add @elonehoo/concise-ms</span></span>
<span class="line"><span style="color:#676E95;"># pnpm</span></span>
<span class="line"><span style="color:#A6ACCD;">pnpm install @elonehoo/concise-ms</span></span>
<span class="line"></span></code></pre></div><h2 id="usage" tabindex="-1">usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">conciseMilliseconds</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@elonehoo/concise-ms</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">conciseMilliseconds</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1337000000</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">//=&gt; &#39;15d 11h 23m 20s&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">conciseMilliseconds</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1337</span><span style="color:#A6ACCD;">)</span><span style="color:#676E95;">//=&gt; &#39;1.3s&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">conciseMilliseconds</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">133</span><span style="color:#A6ACCD;">)</span><span style="color:#676E95;">//=&gt; &#39;133ms&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// \`compact\` option</span></span>
<span class="line"><span style="color:#82AAFF;">conciseMilliseconds</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1337</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">compact</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#676E95;">//=&gt; &#39;1s&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// \`verbose\` option</span></span>
<span class="line"><span style="color:#82AAFF;">conciseMilliseconds</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1335669000</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">verbose</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#676E95;">//=&gt; &#39;15 days 11 hours 1 minute 9 seconds&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// \`colonNotation\` option</span></span>
<span class="line"><span style="color:#82AAFF;">conciseMilliseconds</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">95500</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">colonNotation</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#676E95;">//=&gt; &#39;1:35.5&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// \`formatSubMilliseconds\` option</span></span>
<span class="line"><span style="color:#82AAFF;">conciseMilliseconds</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">100.400080</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">formatSubMilliseconds</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#676E95;">//=&gt; &#39;100ms 400\xB5s 80ns&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Can be useful for time durations</span></span>
<span class="line"><span style="color:#82AAFF;">conciseMilliseconds</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2014</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">40</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2014</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">))</span><span style="color:#676E95;">//=&gt; &#39;35m&#39;</span></span>
<span class="line"></span></code></pre></div><h2 id="api" tabindex="-1">api <a class="header-anchor" href="#api" aria-hidden="true">#</a></h2><h3 id="prettymilliseconds-milliseconds-options" tabindex="-1">prettyMilliseconds(milliseconds, options?) <a class="header-anchor" href="#prettymilliseconds-milliseconds-options" aria-hidden="true">#</a></h3><h4 id="milliseconds" tabindex="-1">milliseconds <a class="header-anchor" href="#milliseconds" aria-hidden="true">#</a></h4><p>Type: <code>number</code></p><p>Milliseconds to humanize.</p><h4 id="options" tabindex="-1">options <a class="header-anchor" href="#options" aria-hidden="true">#</a></h4><p>Type: <code>object</code></p><h5 id="secondsdecimaldigits" tabindex="-1">secondsDecimalDigits <a class="header-anchor" href="#secondsdecimaldigits" aria-hidden="true">#</a></h5><p>Type: <code>number</code><br> Default: <code>1</code></p><p>Number of digits to appear after the seconds decimal point.</p><h5 id="millisecondsdecimaldigits" tabindex="-1">millisecondsDecimalDigits <a class="header-anchor" href="#millisecondsdecimaldigits" aria-hidden="true">#</a></h5><p>Type: <code>number</code><br> Default: <code>0</code></p><p>Number of digits to appear after the milliseconds decimal point.</p><p>Useful in combination with <a href="https://nodejs.org/api/process.html#process_process_hrtime_time" target="_blank" rel="noreferrer"><code>process.hrtime()</code></a>.</p><h5 id="keepdecimalsonwholeseconds" tabindex="-1">keepDecimalsOnWholeSeconds <a class="header-anchor" href="#keepdecimalsonwholeseconds" aria-hidden="true">#</a></h5><p>Type: <code>boolean</code><br> Default: <code>false</code></p><p>Keep milliseconds on whole seconds: <code>13s</code> \u2192 <code>13.0s</code>.</p><p>Useful when you are showing a number of seconds spent on an operation and don&#39;t want the width of the output to change when hitting a whole number.</p><h5 id="compact" tabindex="-1">compact <a class="header-anchor" href="#compact" aria-hidden="true">#</a></h5><p>Type: <code>boolean</code><br> Default: <code>false</code></p><p>Only show the first unit: <code>1h 10m</code> \u2192 <code>1h</code>.</p><p>Also ensures that <code>millisecondsDecimalDigits</code> and <code>secondsDecimalDigits</code> are both set to <code>0</code>.</p><h5 id="unitcount" tabindex="-1">unitCount <a class="header-anchor" href="#unitcount" aria-hidden="true">#</a></h5><p>Type: <code>number</code><br> Default: <code>Infinity</code></p><p>Number of units to show. Setting <code>compact</code> to <code>true</code> overrides this option.</p><h5 id="verbose" tabindex="-1">verbose <a class="header-anchor" href="#verbose" aria-hidden="true">#</a></h5><p>Type: <code>boolean</code><br> Default: <code>false</code></p><p>Use full-length units: <code>5h 1m 45s</code> \u2192 <code>5 hours 1 minute 45 seconds</code></p><h5 id="separatemilliseconds" tabindex="-1">separateMilliseconds <a class="header-anchor" href="#separatemilliseconds" aria-hidden="true">#</a></h5><p>Type: <code>boolean</code><br> Default: <code>false</code></p><p>Show milliseconds separately. This means they won&#39;t be included in the decimal part of the seconds.</p><h5 id="formatsubmilliseconds" tabindex="-1">formatSubMilliseconds <a class="header-anchor" href="#formatsubmilliseconds" aria-hidden="true">#</a></h5><p>Type: <code>boolean</code><br> Default: <code>false</code></p><p>Show microseconds and nanoseconds.</p><h5 id="colonnotation" tabindex="-1">colonNotation <a class="header-anchor" href="#colonnotation" aria-hidden="true">#</a></h5><p>Type: <code>boolean</code><br> Default: <code>false</code></p><p>Display time using colon notation: <code>5h 1m 45s</code> \u2192 <code>5:01:45</code>. Always shows time in at least minutes: <code>1s</code> \u2192 <code>0:01</code></p><p>Useful when you want to display time without the time units, similar to a digital watch.</p><p>Setting <code>colonNotation</code> to <code>true</code> overrides the following options to <code>false</code>:</p><ul><li><code>compact</code></li><li><code>formatSubMilliseconds</code></li><li><code>separateMilliseconds</code></li><li><code>verbose</code></li></ul>`,45),p=[l];function c(t,i,r,d,y,h){return n(),e("div",null,p)}const A=s(o,[["render",c]]);export{D as __pageData,A as default};
